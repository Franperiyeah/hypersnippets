{
    "Hypersnippet basic html template": {
        "prefix": "!hyphtml",
        "body": [
           "<!DOCTYPE html>",
"<html lang=\"en\">",
"<head>",
    "<meta charset=\"UTF-8\">",
    "<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">",
    "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "<title>Document</title>",
"</head>",
"<body>",
    "$0",
"</body>",
"</html>"
        ]
    },
    "Hypersnippet JS Reverse a string": {
        "prefix": "!hypjsrs",
        "body": [
            "const reverseString= string => [...string].reverse().join('');"
        ]
    },
    "Hypersnippet JS Loop through an object": {
        "prefix": "!hypjslo",
        "body": [
            "const person = { name: 'Fran', Age: 30, Gender: 'male' };",
            "for (const property in person) {",
              "console.log(`${property}: ${person[property]}`);",
           " }"
        ]
    },
    "Hypersnippet JS Find in an array of objects": {
        "prefix": "!hypjsfao",
        "body": [
            "const students = [",
                "{name: 'Fran', roll: 2},",
                "{name: 'Nathan', roll: 10},",
               " {name: 'Ellie', roll: 5}",
              "];",
              "$0",
              "function search(student) {",
                "return student.name=== 'Fran';",
              "}"
        ]
    },
    "Hypersnippet JS Sorting an array": {
        "prefix": "!hypjssa",
        "body": [
            "const name = ['Fran', 'Nathan', 'Ellie', 'Jane'];",
            "const arr = [1, 30, 4, 21, 100000];",
            "name.sort();",
            "console.log(name);",
            "$0",
            // sort numerically
            "arr.sort(function(a, b) {",
            "return a - b;",
            "});"
        ]
    },
    "Hypersnippet JS Find the largest number of an array": {
        "prefix": "!hypjsfla",
        "body": [
            "const array1 = [1,3,2];",
             "console.log(math.max(...array1));"
        ]
    },
    "Hypersnippet import react": {
        "prefix": "!hypir",
        "body": [
            "import React from 'react'"
            
        ]
    },
    "Hypersnippet import react with component": {
        "prefix": "!hypirc",
        "body": [
            "import React, { Component } from 'react';"
            
        ]
    },
    "Hypersnippet Class Component and export": {
        "prefix": "!hyprcc",
        "body": [
            "class | extends Component {",
                "state = { | },",
               " render() {",
                 " return ( | );",
               " }",
              "}",
              "$0",
              "export default |;"
        ]
    },
    "Hypersnippet stateless function component": {
        "prefix": "!hyprsfc",
        "body": [
            "const | = props => {",
                "return ( | );",
             " };",
             "$0",
              "export default |;"
        ]
    },
    "Hypersnippet componentDidMount": {
        "prefix": "!hyprcdm",
        "body": [
            "componentDidMount() {",
            "$0",  
              "}"
        ]
    },
    "Hypersnippet componentDidUpdate": {
        "prefix": "!hyprcdu",
        "body": [
            "componentDidUpdate(prevProps, prevState) {",
            "$0",  
             "}"
        ]
    },
    "Hypersnippet setState": {
        "prefix": "!hyprss",
        "body": [
            "this.setState({ | : | });"
        ]
    },
    "Hypersnippet render": {
        "prefix": "!hyprren",
        "body": [
            "render() {",
               " return (",
               "$0",
                ");",
              "}"
        ]
    },

    "Hypersnippet react component template": {
        "prefix": "!hyprc",
        "body": [
            "import React from 'react'",
            "$0",
            "function X() {",
                "return (",
                   "<div>",
                    "$0", 
                    "</div>",
                ")",
            "}",
            "$0",
            "export default X"
            
        ]
    }
}